{"version":3,"sources":["Orpheus512.png","components/Home.js","components/Commands.js","components/Meme.js","components/Memelist.js","components/ErrorMsg.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","className","src","logo","to","href","id","Component","Commands","Meme","console","log","data","map","row","name","box","imgsrc","Memelist","getMeme","a","memeResult","axios","get","memeList","memes","username","password","ids","contentbox","i","length","push","box_count","request","j","result","method","url","success","resulturl","items","setState","state","this","ErrorMsg","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.630d36f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Orpheus512.6955f688.png\";","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport logo from '../Orpheus512.png';\r\nimport './Home.css';\r\n\r\nclass Home extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"header\">\r\n                    <h1>ORPHEUS</h1>\r\n                    <div className=\"logoContainer\">\r\n                        <img className=\"logo\" src={logo} />\r\n                    </div>\r\n                    <p>Even in Death, I Will Always Be Here for You</p>\r\n                </div>\r\n                <div className=\"navigation\">\r\n                    <Link to=\"/commands\"><button className=\"button-primary\">Command List</button></Link>\r\n                    <a href=\"https://gg.gg/orpheusbot\"><button className=\"button-primary\">Add to Server</button></a>\r\n                    <a href=\"https://patreon.com/sorrowinrain\"><button className=\"button-primary\">Support Us</button></a>\r\n                    <button className=\"button-primary\">Contact Us</button>\r\n                </div>\r\n                <div className=\"author\">\r\n                    <p id=\"authors\">Meet the Makers</p>\r\n                    <div className=\"authorCard\">\r\n                        <img className=\"card\" src=\"https://cdn.discordapp.com/avatars/514433421142130698/68e2599934b095f6512e681a99facf29.webp\" />\r\n                        <div className=\"container\">\r\n                            <h4><b>hawntozero#5059</b></h4>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"authorCard\">\r\n                        <img className=\"card\" src=\"https://cdn.discordapp.com/avatars/218160263361200128/46d58530e383aaa012ac7f79c955d143.webp\" />\r\n                        <div className=\"container\">\r\n                            <h4><b>miner46er#3857</b></h4>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"authorCard\">\r\n                        <img className=\"card\" src=\"https://cdn.discordapp.com/avatars/307478723563749376/2d2ca86af531f599247de810a5d3ec91.webp\" />\r\n                        <div className=\"container\">\r\n                            <h4><b>SorrowInRain#2851</b></h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport logo from '../Orpheus512.png';\r\nimport './Commands.css';\r\n\r\nclass Commands extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"header\">\r\n                    <h1>COMMAND LIST</h1>\r\n                    <p>Prefix : !</p>\r\n                </div>\r\n                <div className=\"buttons\">\r\n                    <div className=\"navigation\">\r\n                        <a href=\"#general\"><button className=\"button-primary\">General</button></a>\r\n                        <a href=\"#music\"><button className=\"button-primary\">Music Player</button></a>\r\n                        <a href=\"#memes\"><button className=\"button-primary\">Memes</button></a>\r\n                        <a href=\"#r6s\"><button className=\"button-primary\">Rainbow 6 : Siege</button></a>\r\n                        <a href=\"#misc\"><button className=\"button-primary\">Misc.</button></a>\r\n                    </div>\r\n                    <Link to=\"/\"><button className=\"button-primary\">Back to Homepage</button></Link>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <h3 id=\"general\">General</h3>\r\n                    <table className=\"commands\">\r\n                        <tr>\r\n                            <th>Command</th>\r\n                            <th>Description</th>\r\n                            <th>Example</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>help</td>\r\n                            <td>Show list of commands that you can use</td>\r\n                            <td>!help</td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    <h3 id=\"music\">Music Player</h3>\r\n                    <table className=\"commands\">\r\n                        <tr>\r\n                            <th>Command</th>\r\n                            <th>Description</th>\r\n                            <th>Example</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>play</td>\r\n                            <td>Input song title and Orpheus will play his lyre to you</td>\r\n                            <td>!play &lt;Song-Title&gt; <br></br> !play Never Gonna Give You Up</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>nowplaying</td>\r\n                            <td>Show the title of currently played song.</td>\r\n                            <td>!nowplaying</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>queue</td>\r\n                            <td>Show the queue of the songs right now</td>\r\n                            <td>!queue</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>skip</td>\r\n                            <td>Skip the currently played song</td>\r\n                            <td>!skip</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>stop</td>\r\n                            <td>Stop the currently played song and remove all songs from the queue.</td>\r\n                            <td>!stop</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>remove</td>\r\n                            <td>Remove the song in queue by index that you input.</td>\r\n                            <td>!remove &lt;Index in Queue&gt; <br></br> !remove 1</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>movesong</td>\r\n                            <td>Move the song in queue from some index to the index that you input.</td>\r\n                            <td>!movesong &lt;Index in Queue&gt; &lt;Desired Index&gt;<br></br> !movesong 3 1</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>setloop</td>\r\n                            <td>Make your song playlist looping</td>\r\n                            <td>!setloop &lt;on/off&gt; <br></br> !setloop on</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>setshuffle</td>\r\n                            <td>Make your song playlist shuffling</td>\r\n                            <td>!setshuffle &lt;on/off&gt; <br></br> !setshuffle on</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>lyric</td>\r\n                            <td>Didn't know the lyric of your song? Just use this command. You don't have to use any parameter if you want to know the lyrics from the currently played song</td>\r\n                            <td>!lyric [Song-Title]<br></br> !lyric <br></br> !lyric What is Love</td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    <h3 id=\"memes\">Memes</h3>\r\n                    <table className=\"commands\">\r\n                        <tr>\r\n                            <th>Command</th>\r\n                            <th>Description</th>\r\n                            <th>Example</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>meme</td>\r\n                            <td>Get your meme with using meme ID from meme list, modify by yourself. The amount of texts that you must input is listed on !memelist</td>\r\n                            <td>!meme &lt;Meme-ID&gt; | &lt;Text1&gt; | &lt;Text2&gt; <br></br> !meme 1 | text1 | text2 | text3 </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>memelist</td>\r\n                            <td>Show the list of meme and the amount of texts that needed. Each page contain 20 memes. For the complete memelist, click <Link to=\"/meme-list\"><b>here</b></Link></td>\r\n                            <td>!memelist [Page] <br></br> !memelist 2</td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    <h3 id=\"r6s\">Rainbow 6 : Siege</h3>\r\n                    <table className=\"commands\">\r\n                        <tr>\r\n                            <th>Command</th>\r\n                            <th>Description</th>\r\n                            <th>Example</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>strat</td>\r\n                            <td>Get your Get a random strat for your <s>dumber</s> better experience.</td>\r\n                            <td>!strat [Attacker/Defender] <br></br> !strat Attacker </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>stats</td>\r\n                            <td>Show your statistics in general. (PC)</td>\r\n                            <td>!stats &lt;Username&gt; <br></br> !stats miner46er</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>opstats</td>\r\n                            <td>Get your statistics based on your favourite operator. (PC)</td>\r\n                            <td>!opstats &lt;Username&gt; &lt;Operator&gt;<br></br> !opstats hawntozero Montagne</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>opdetail</td>\r\n                            <td>Give the detail of operator.</td>\r\n                            <td>!opdetail &lt;Operator&gt;<br></br> !opdetail Thermite</td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    <h3 id=\"misc\">Miscellaneous</h3>\r\n                    <table className=\"commands\">\r\n                        <tr>\r\n                            <th>Command</th>\r\n                            <th>Description</th>\r\n                            <th>Example</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>flip</td>\r\n                            <td>Flip a coin!</td>\r\n                            <td>!flip</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>roll</td>\r\n                            <td>Roll a N-side dice</td>\r\n                            <td>!roll &lt;Sides&gt; <br></br> !roll 20</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>trivia</td>\r\n                            <td>Get random trivia</td>\r\n                            <td>!trivia</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>cat</td>\r\n                            <td>Get random picture of the cutest (and the most annoying) animal in the world</td>\r\n                            <td>!cat</td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className=\"author\">\r\n                    <p id=\"authors\">Meet the Makers</p>\r\n                    <div className=\"authorCard\">\r\n                        <img className=\"card\" src=\"https://cdn.discordapp.com/avatars/514433421142130698/68e2599934b095f6512e681a99facf29.webp\" />\r\n                        <div className=\"container\">\r\n                            <h4><b>hawntozero#5059</b></h4>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"authorCard\">\r\n                        <img className=\"card\" src=\"https://cdn.discordapp.com/avatars/218160263361200128/46d58530e383aaa012ac7f79c955d143.webp\" />\r\n                        <div className=\"container\">\r\n                            <h4><b>miner46er#3857</b></h4>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"authorCard\">\r\n                        <img className=\"card\" src=\"https://cdn.discordapp.com/avatars/307478723563749376/2d2ca86af531f599247de810a5d3ec91.webp\" />\r\n                        <div className=\"container\">\r\n                            <h4><b>SorrowInRain#2851</b></h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Commands;","import React from 'react';\r\n\r\nfunction Meme(props){\r\n    console.log(props);\r\n    return(\r\n        <table className=\"memecontent\">\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Meme Name</th>\r\n                    <th>Text Needed</th>\r\n                    <th>Example Picture</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    props.data.map(row =>(\r\n                        <tr>\r\n                            <td>{row.id}</td>\r\n                            <td>{row.name}</td>\r\n                            <td>{row.box}</td>\r\n                            <td><img src={row.imgsrc} /></td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Meme;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport Meme from './Meme';\r\nimport './Memelist.css';\r\n\r\nclass Memelist extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            items : []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getMeme();\r\n    }\r\n\r\n    getMeme = async() => {\r\n        let memeResult = \"\";\r\n        memeResult = await axios.get('https://api.imgflip.com/get_memes');\r\n\r\n        let memeList = \"\";\r\n        memeList = memeResult.data.data.memes;\r\n\r\n        let username = \"SorrowInRain\";\r\n        let password = \"orpheus-discord\";\r\n\r\n        let ids=[];\r\n        let name=[];\r\n        let contentbox = [];\r\n        let memes = [];\r\n\r\n        for(var i=0; i<memeList.length; i++){\r\n            ids.push(memeList[i].id);\r\n            name.push(memeList[i].name);\r\n            contentbox.push(memeList[i].box_count);\r\n        }\r\n\r\n        for(var i=0; i<memeList.length;i++){\r\n            let request = \"\";\r\n            request += \"?template_id=\" + ids[i] + \"&username=\" + username + \"&password=\" + password;\r\n            for(var j=0; j<contentbox[i]; j++){\r\n                request += \"&boxes[\" + j + \"][text]=text\" + (j+1);\r\n            }\r\n\r\n            let result = \"\";\r\n            result = await axios({\r\n                method: \"POST\",\r\n                url : \"https://api.imgflip.com/caption_image\" + request\r\n            });\r\n\r\n            let success = result.data.success;\r\n            let resulturl = \"\";\r\n\r\n            if(success){\r\n                resulturl = result.data.data.url;\r\n                memes.push(resulturl);\r\n            }\r\n            else{\r\n                resulturl = \"-\";\r\n                memes.push(resulturl);\r\n            }\r\n        }\r\n\r\n        let items = [];\r\n\r\n        for(var i = 0; i<memeList.length; i++){\r\n            items.push({\r\n                id : i+1,\r\n                name : name[i],\r\n                box : contentbox[i],\r\n                imgsrc : memes[i]\r\n            });\r\n        }\r\n        this.setState({items : items})\r\n    }\r\n\r\n    render(){\r\n        let {items} = this.state;\r\n        console.log(items)\r\n        return(\r\n            <div>\r\n                <div className=\"header\">\r\n                    <h1>MEME LIST</h1>\r\n                    <p>Powered by : imgflip.com</p>\r\n                    <p className=\"note\">If the images not loaded, wait for a bit.</p>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <Meme data={items} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Memelist;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction ErrorMsg(){\r\n    return(\r\n        <div>\r\n            <h1>404</h1>\r\n            <h3>Page Not Found!</h3>\r\n            <Link to=\"/\">\r\n                <p>\r\n                    Back to Home\r\n                </p>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorMsg;","import React from 'react';\r\nimport{\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport Home from './components/Home';\r\nimport Commands from './components/Commands';\r\nimport Memelist from './components/Memelist';\r\nimport ErrorMsg from './components/ErrorMsg';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/commands\" exact component={Commands} />\r\n          <Route path=\"/meme-list\" exact component={Memelist} />\r\n          <Route component={ErrorMsg} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}